{"ast":null,"code":"var _jsxFileName = \"/Users/jackjephson/university/info-vis-group/src/views/SlideShow/SlideShow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Image1 from 'assets/image1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SlideShow() {\n  _s();\n  const images = Array.from({\n    length: 10\n  }, (_, index) => ({\n    src: require(`assets/image${index + 1}.png`).default,\n    alt: `Image ${index + 1}`\n  }));\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  useEffect(() => {\n    const displayImagesSequentially = async () => {\n      for (let i = 0; i < images.length; i++) {\n        console.log(currentImageIndex);\n        setCurrentImageIndex(i);\n        await delay(1000); // Adjust the delay as needed (1000 ms = 1 second)\n      }\n    };\n    displayImagesSequentially();\n  }, [images]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentImageIndex].src,\n        alt: \"\",\n        style: {\n          width: '500px',\n          height: '500px',\n          margin: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Image1,\n        alt: \"\",\n        style: {\n          width: '500px',\n          height: '500px',\n          margin: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SlideShow, \"iwdYV/csWqs0gMEM0R8yiwCHnVs=\");\n_c = SlideShow;\nexport default SlideShow;\nvar _c;\n$RefreshReg$(_c, \"SlideShow\");","map":{"version":3,"names":["React","useEffect","useState","Image1","jsxDEV","_jsxDEV","Fragment","_Fragment","SlideShow","_s","images","Array","from","length","_","index","src","require","default","alt","delay","ms","Promise","resolve","setTimeout","currentImageIndex","setCurrentImageIndex","displayImagesSequentially","i","console","log","children","style","width","height","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jackjephson/university/info-vis-group/src/views/SlideShow/SlideShow.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Image1 from 'assets/image1.png';\n\nfunction SlideShow() {\n  const images: Image[] = Array.from({ length: 10 }, (_, index) => ({\n    src: require(`assets/image${index + 1}.png`).default,\n    alt: `Image ${index + 1}`,\n  }));\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  useEffect(() => {\n    const displayImagesSequentially = async () => {\n      for (let i = 0; i < images.length; i++) {\n        console.log(currentImageIndex)\n        setCurrentImageIndex(i);\n        await delay(1000); // Adjust the delay as needed (1000 ms = 1 second)\n      }\n    };\n\n    displayImagesSequentially();\n  }, [images]);\n\n  return (\n    <>\n      <div>\n        <img src={images[currentImageIndex].src} alt='' style={{ width: '500px', height: '500px', margin: '5px' }} />\n        <img src={Image1} alt='' style={{ width: '500px', height: '500px', margin: '5px' }} />\n      </div>\n    </>\n  );\n}\n\nexport default SlideShow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,MAAe,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IAChEC,GAAG,EAAEC,OAAO,CAAE,eAAcF,KAAK,GAAG,CAAE,MAAK,CAAC,CAACG,OAAO;IACpDC,GAAG,EAAG,SAAQJ,KAAK,GAAG,CAAE;EAC1B,CAAC,CAAC,CAAC;EAEH,MAAMK,KAAK,GAAIC,EAAU,IAAK;IAC5B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,MAAM,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAM0B,yBAAyB,GAAG,MAAAA,CAAA,KAAY;MAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,MAAM,CAACG,MAAM,EAAEe,CAAC,EAAE,EAAE;QACtCC,OAAO,CAACC,GAAG,CAACL,iBAAiB,CAAC;QAC9BC,oBAAoB,CAACE,CAAC,CAAC;QACvB,MAAMR,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDO,yBAAyB,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAKW,GAAG,EAAEN,MAAM,CAACe,iBAAiB,CAAC,CAACT,GAAI;QAACG,GAAG,EAAC,EAAE;QAACa,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GlC,OAAA;QAAKW,GAAG,EAAEb,MAAO;QAACgB,GAAG,EAAC,EAAE;QAACa,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC,gBACN,CAAC;AAEP;AAAC9B,EAAA,CAhCQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAkClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}